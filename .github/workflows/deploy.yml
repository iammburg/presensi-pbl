name: CI/CD to VPS

on:
  push:
    branches:
      - main

env:
  TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build & Push Laravel
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/presensi-laravel:${TAG} .
        docker push ${{ secrets.DOCKER_USERNAME }}/presensi-laravel:${TAG}

    - name: Build & Push Flask
      run: |
        docker build -f .docker/flask/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/presensi-flask:${TAG} .
        docker push ${{ secrets.DOCKER_USERNAME }}/presensi-flask:${TAG}

    - name: Deploy Stack to VPS
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /home/${{ secrets.VPS_USER }}/app
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          TAG=${TAG} docker stack deploy -c docker-compose.prod.yml presensi-pbl

    - name: Wait & Fix Laravel permissions
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "Waiting up to 60s for Laravel container..."
          for i in {1..12}; do
            ID=$(docker ps --filter 'name=laravel' --filter 'name=presensi-pbl' -q | head -n1)
            if [ -n "$ID" ]; then break; fi
            echo "Wait $((i*5))s..."
            sleep 5
          done

          if [ -z "$ID" ]; then
            echo "Laravel container not found. Exit."
            exit 1
          fi

          echo "ðŸ”§ Fixing permissions in $ID..."
          docker exec "$ID" mkdir -p storage bootstrap/cache
          docker exec "$ID" chown -R www-data:www-data storage bootstrap/cache || true
          docker exec "$ID" chmod -R 775 storage bootstrap/cache || true
          docker exec "$ID" php artisan config:cache || true
          docker exec "$ID" php artisan route:cache || true
          docker exec "$ID" php artisan view:cache || true

